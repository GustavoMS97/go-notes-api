definitions:
  docs.ErrorResponse:
    properties:
      error:
        example: Something went wrong
        type: string
    type: object
  docs.LoginResponse:
    properties:
      access_token:
        example: areallylongjwttoken
        type: string
      refresh_token:
        example: areallylongjwttoken
        type: string
    type: object
  internal_note.CreateNoteRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  internal_note.Note:
    properties:
      _id:
        type: string
      content:
        type: string
      created_at:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  internal_note.UpdateNoteRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  internal_user.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - name
    - password
    type: object
  internal_user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  internal_user.RefreshRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  internal_user.User:
    properties:
      _id:
        type: string
      created_at:
        type: string
      email:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: API for notes with JWT authentication
  title: Go Notes API
  version: "1.0"
paths:
  /notes:
    get:
      parameters:
      - description: Filter by title (case insensitive)
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_note.Note'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List notes for the logged-in user
      tags:
      - Notes
    post:
      consumes:
      - application/json
      parameters:
      - description: Note data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_note.CreateNoteRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_note.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new note
      tags:
      - Notes
  /notes/{id}:
    delete:
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete a note by ID
      tags:
      - Notes
    put:
      consumes:
      - application/json
      parameters:
      - description: Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Fields to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_note.UpdateNoteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_note.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update a note by ID
      tags:
      - Notes
  /users:
    post:
      consumes:
      - application/json
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/internal_user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: Register a new user
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      description: Log in with email and password and receive access and refresh tokens
      parameters:
      - description: Login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/docs.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: Authenticate user
      tags:
      - Users
  /users/me:
    get:
      description: Return the currently authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_user.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get logged in user
      tags:
      - Users
  /users/refresh:
    post:
      consumes:
      - application/json
      description: Use a valid refresh token to generate a new access and refresh
        token
      parameters:
      - description: Refresh token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_user.RefreshRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/docs.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/docs.ErrorResponse'
      summary: Refresh access token
      tags:
      - Users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
